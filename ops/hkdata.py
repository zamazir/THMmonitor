import beaconconvert as beaconconvert
import struct

#                        NAME                          FORMAT    INTERPRET FUNCTION                 SENSOR_ID
thm_bytes =    [("Timestamp",                           "<I",  None,                                  None),
               ("Status",                               "B",   beaconconvert.statusConverter,         None),
               ("Payload Temperature OW1",              "<h",  beaconconvert.interpretNoChange,          0),
               ("Payload Temperature OW2",              "<h",  beaconconvert.interpretNoChange,          1),
               ("Payload Temperature OW3",              "<h",  beaconconvert.interpretNoChange,          2),
               ("Payload Temperature OW4",              "<h",  beaconconvert.interpretNoChange,          3),
               ("Payload Temperature OW5",              "<h",  beaconconvert.interpretNoChange,          4),
               ("Payload Temperature OW6",              "<h",  beaconconvert.interpretNoChange,          5),
               ("ADCS Sidepanel X+ Temperature BMX",    "<h",  beaconconvert.interpretBMX055,            6),
               ("ADCS Sidepanel X+ Temperature OW1",    "<h",  beaconconvert.interpretDS18B20,           7),
               ("ADCS Sidepanel X+ Temperature OW2",    "<h",  beaconconvert.interpretDS18B20,           8),
               ("ADCS Sidepanel X+ Temperature OW3",    "<h",  beaconconvert.interpretDS18B20,          9,),
               ("ADCS Sidepanel X- Temperature BMX",    "<h",  beaconconvert.interpretBMX055,           10),
               ("ADCS Sidepanel X- Temperature OW1",    "<h",  beaconconvert.interpretDS18B20,          11),
               ("ADCS Sidepanel X- Temperature OW2",    "<h",  beaconconvert.interpretDS18B20,          12),
               ("ADCS Sidepanel X- Temperature OW3",    "<h",  beaconconvert.interpretDS18B20,          13),
               ("ADCS Sidepanel Y+ Temperature BMX",    "<h",  beaconconvert.interpretBMX055,           14),
               ("ADCS Sidepanel Y+ Temperature OW1",    "<h",  beaconconvert.interpretDS18B20,          15),
               ("ADCS Sidepanel Y+ Temperature OW2",    "<h",  beaconconvert.interpretDS18B20,          16),
               ("ADCS Sidepanel Y+ Temperature OW3",    "<h",  beaconconvert.interpretDS18B20,          17),
               ("ADCS Sidepanel Y- Temperature BMX",    "<h",  beaconconvert.interpretBMX055,           18),
               ("ADCS Sidepanel Y- Temperature OW1",    "<h",  beaconconvert.interpretDS18B20,          19),
               ("ADCS Sidepanel Y- Temperature OW2",    "<h",  beaconconvert.interpretDS18B20,          20),
               ("ADCS Sidepanel Y- Temperature OW3",    "<h",  beaconconvert.interpretDS18B20,          21),
               ("ADCS Sidepanel Z+ Temperature OW1",    "<h",  beaconconvert.interpretBMX055,           22),
               ("ADCS Sidepanel Z+ Temperature OW2",    "<h",  beaconconvert.interpretDS18B20,          23),
               ("ADCS Sidepanel Z+ Temperature OW3",    "<h",  beaconconvert.interpretDS18B20,          24),
               ("ADCS Sidepanel Z+ Temperature OW4",    "<h",  beaconconvert.interpretDS18B20,          25),
               ("ADCS Mainpanel Z- Temperature BMX",    "<h",  beaconconvert.interpretBMX055,           37),
               ("ADCS Mainpanel Z- Temperature OW1",    "<h",  beaconconvert.interpretDS18B20,          38),
               ("EPS Board Temperature",                "<h",  beaconconvert.interpretNoChange,         26),
               ("EPS Battery Board Temperature",        "<h",  beaconconvert.interpretNoChange,         27),
               ("EPS Battery Temperature 1",            "<h",  beaconconvert.interpretNoChange,         28),
               ("EPS Battery Temperature 2",            "<h",  beaconconvert.interpretNoChange,         29),
               ("COM S-Band Temperature 1",             "<h",  beaconconvert.interpretUnknownCOMSensor, 30),
               ("COM S-Band Temperature 2",             "<h",  beaconconvert.interpretMCP9802,          31),
               ("COM S-Band Temperature 3",             "<h",  beaconconvert.interpretEMC1701,          32),
               ("COM UHF-VHF Temperature 1",            "<h",  beaconconvert.interpretMCP9802,          33),
               ("COM UHF-VHF Temperature 2",            "<h",  beaconconvert.interpretLT55599,          34),
               ("COM UHF-VHF Temperature 3",            "<h",  beaconconvert.interpretEMC1701,          35),
               ("CDH Temperature 1",                    "<h",  beaconconvert.interpretNoChange,         36),
               ("Line terminator",                      "B",   None,                                  None)]

def getTotalBytes():
     return sum([struct.calcsize(el[1]) for el in thm_bytes])
